<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>


  <servlet>

    <servlet-name>springMVC</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!-- 配置 DispatcherServlet 的一个初始化参数: 配置 SpringMVC 配置文件的位置和名称 -->
    <!--
        实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用默认的.
        默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml
    -->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springMVC.xml</param-value>
    </init-param>
      <!--
        1)load-on-startup元素标记容器是否在启动的时候就加载这个servlet(实例化并调用其init()方法)。
        2)它的值必须是一个整数，表示servlet应该被载入的顺序
        2)当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；
        3)当值小于0或者没有指定时，则表示容器在该servlet被选择时才会去加载。
        4)正数的值越小，该servlet的优先级越高，应用启动时就越先加载。
        5)当值相同时，容器就会自己选择顺序来加载。
      -->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>springMVC</servlet-name>
    <!--
      这里注意，有三种写法，下面分别解释
      /*  拦截所有的请求，包括静态资源（jsp/js/css/...）
      *.action 或者*.do  拦截指定后缀的请求（以.action或者.do结尾的请求）
      /   拦截除了jsp以外的所有请求，包括静态资源（js/css/...）
    -->
    <url-pattern>/</url-pattern>
  </servlet-mapping>



  <!--spring web 模块内置解决post提交方式的中文乱码配置-->
  <filter>
    <filter-name>postEncoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>postEncoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

</web-app>
